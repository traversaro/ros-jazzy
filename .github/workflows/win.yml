jobs:
  stage_0_job_0:
    name: mutex octomap urdfdom-py ament-package
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs: []
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros2-distro-mutex ros-humble-octomap ros-humble-urdfdom-py
          ros-jazzy-ament-package
        PYTHONUNBUFFERED: 1
      name: Build ros2-distro-mutex ros-humble-octomap ros-humble-urdfdom-py ros-jazzy-ament-package
  stage_1_job_1:
    name: ament-cmake-core ros-workspace ros-environment
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_0_job_0
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-cmake-core ros-jazzy-ros-workspace ros-jazzy-ros-environment
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-cmake-core ros-jazzy-ros-workspace ros-jazzy-ros-environment
  stage_2_job_2:
    name: ament-lint ament-cmake-python gtest-vendor ament-cmake-libraries ament-cmake-include-directories
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_1
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-lint ros-jazzy-ament-cmake-python ros-jazzy-gtest-vendor
          ros-jazzy-ament-cmake-libraries ros-jazzy-ament-cmake-include-directories
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-lint ros-jazzy-ament-cmake-python ros-jazzy-gtest-vendor
        ros-jazzy-ament-cmake-libraries ros-jazzy-ament-cmake-include-directories
  stage_2_job_3:
    name: ament-cmake-export-libraries ament-cmake-version ament-cmake-export-link-flags
      ament-cmake-export-include-directories ament-cmake-export-definitions
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_1
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-cmake-export-libraries ros-jazzy-ament-cmake-version
          ros-jazzy-ament-cmake-export-link-flags ros-jazzy-ament-cmake-export-include-directories
          ros-jazzy-ament-cmake-export-definitions
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-cmake-export-libraries ros-jazzy-ament-cmake-version
        ros-jazzy-ament-cmake-export-link-flags ros-jazzy-ament-cmake-export-include-directories
        ros-jazzy-ament-cmake-export-definitions
  stage_2_job_4:
    name: ament-pycodestyle osrf-pycommon google-benchmark-vendor osrf-testing-tools-cpp
      test-interface-files
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_1
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-pycodestyle ros-jazzy-osrf-pycommon ros-jazzy-google-benchmark-vendor
          ros-jazzy-osrf-testing-tools-cpp ros-jazzy-test-interface-files
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-pycodestyle ros-jazzy-osrf-pycommon ros-jazzy-google-benchmark-vendor
        ros-jazzy-osrf-testing-tools-cpp ros-jazzy-test-interface-files
  stage_2_job_5:
    name: iceoryx-hoofs urdfdom-headers
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_1_job_1
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-iceoryx-hoofs ros-jazzy-urdfdom-headers
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-iceoryx-hoofs ros-jazzy-urdfdom-headers
  stage_3_job_6:
    name: ament-flake8 ament-cmake-test ament-cmake-export-dependencies ament-cmake-target-dependencies
      ament-cmake-export-targets
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_2_job_2
    - stage_2_job_3
    - stage_2_job_4
    - stage_2_job_5
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-flake8 ros-jazzy-ament-cmake-test ros-jazzy-ament-cmake-export-dependencies
          ros-jazzy-ament-cmake-target-dependencies ros-jazzy-ament-cmake-export-targets
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-flake8 ros-jazzy-ament-cmake-test ros-jazzy-ament-cmake-export-dependencies
        ros-jazzy-ament-cmake-target-dependencies ros-jazzy-ament-cmake-export-targets
  stage_3_job_7:
    name: ament-cmake-export-interfaces gmock-vendor iceoryx-posh
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_2_job_2
    - stage_2_job_3
    - stage_2_job_4
    - stage_2_job_5
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-cmake-export-interfaces ros-jazzy-gmock-vendor
          ros-jazzy-iceoryx-posh
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-cmake-export-interfaces ros-jazzy-gmock-vendor ros-jazzy-iceoryx-posh
  stage_4_job_8:
    name: ament-pep257 ament-cmake-gtest ament-cmake-vendor-package ament-mypy ament-lint-auto
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_3_job_6
    - stage_3_job_7
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-pep257 ros-jazzy-ament-cmake-gtest ros-jazzy-ament-cmake-vendor-package
          ros-jazzy-ament-mypy ros-jazzy-ament-lint-auto
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-pep257 ros-jazzy-ament-cmake-gtest ros-jazzy-ament-cmake-vendor-package
        ros-jazzy-ament-mypy ros-jazzy-ament-lint-auto
  stage_4_job_9:
    name: ament-cmake-pytest ament-cmake-google-benchmark iceoryx-binding-c
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_3_job_6
    - stage_3_job_7
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-cmake-pytest ros-jazzy-ament-cmake-google-benchmark
          ros-jazzy-iceoryx-binding-c
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-cmake-pytest ros-jazzy-ament-cmake-google-benchmark
        ros-jazzy-iceoryx-binding-c
  stage_5_job_10:
    name: ament-copyright ament-cmake-gen-version-h ament-cmake-gmock cyclonedds
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_4_job_8
    - stage_4_job_9
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-copyright ros-jazzy-ament-cmake-gen-version-h
          ros-jazzy-ament-cmake-gmock ros-jazzy-cyclonedds
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-copyright ros-jazzy-ament-cmake-gen-version-h ros-jazzy-ament-cmake-gmock
        ros-jazzy-cyclonedds
  stage_6_job_11:
    name: ament-lint-cmake ament-cmake ament-xmllint ament-cpplint ament-cppcheck
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_10
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-lint-cmake ros-jazzy-ament-cmake ros-jazzy-ament-xmllint
          ros-jazzy-ament-cpplint ros-jazzy-ament-cppcheck
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-lint-cmake ros-jazzy-ament-cmake ros-jazzy-ament-xmllint
        ros-jazzy-ament-cpplint ros-jazzy-ament-cppcheck
  stage_6_job_12:
    name: ament-index-python domain-coordinator ament-clang-format
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_5_job_10
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-index-python ros-jazzy-domain-coordinator
          ros-jazzy-ament-clang-format
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-index-python ros-jazzy-domain-coordinator ros-jazzy-ament-clang-format
  stage_7_job_13:
    name: ament-cmake-lint-cmake uncrustify-vendor launch rosidl-cli fastcdr
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_6_job_11
    - stage_6_job_12
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-cmake-lint-cmake ros-jazzy-uncrustify-vendor
          ros-jazzy-launch ros-jazzy-rosidl-cli ros-jazzy-fastcdr
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-cmake-lint-cmake ros-jazzy-uncrustify-vendor ros-jazzy-launch
        ros-jazzy-rosidl-cli ros-jazzy-fastcdr
  stage_7_job_14:
    name: rpyutils pybind11-vendor tinyxml2-vendor yaml-cpp-vendor zstd-vendor
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_6_job_11
    - stage_6_job_12
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rpyutils ros-jazzy-pybind11-vendor ros-jazzy-tinyxml2-vendor
          ros-jazzy-yaml-cpp-vendor ros-jazzy-zstd-vendor
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rpyutils ros-jazzy-pybind11-vendor ros-jazzy-tinyxml2-vendor
        ros-jazzy-yaml-cpp-vendor ros-jazzy-zstd-vendor
  stage_7_job_15:
    name: liblz4-vendor sqlite3-vendor shared-queues-vendor ament-cmake-auto
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_6_job_11
    - stage_6_job_12
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-liblz4-vendor ros-jazzy-sqlite3-vendor ros-jazzy-shared-queues-vendor
          ros-jazzy-ament-cmake-auto
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-liblz4-vendor ros-jazzy-sqlite3-vendor ros-jazzy-shared-queues-vendor
        ros-jazzy-ament-cmake-auto
  stage_8_job_16:
    name: ament-cmake-copyright ament-uncrustify launch-yaml launch-xml mcap-vendor
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_7_job_13
    - stage_7_job_14
    - stage_7_job_15
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-cmake-copyright ros-jazzy-ament-uncrustify
          ros-jazzy-launch-yaml ros-jazzy-launch-xml ros-jazzy-mcap-vendor
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-cmake-copyright ros-jazzy-ament-uncrustify ros-jazzy-launch-yaml
        ros-jazzy-launch-xml ros-jazzy-mcap-vendor
  stage_9_job_17:
    name: ament-cmake-xmllint ament-cmake-uncrustify ament-cmake-pep257 ament-cmake-flake8
      ament-cmake-cpplint
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_8_job_16
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-cmake-xmllint ros-jazzy-ament-cmake-uncrustify
          ros-jazzy-ament-cmake-pep257 ros-jazzy-ament-cmake-flake8 ros-jazzy-ament-cmake-cpplint
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-cmake-xmllint ros-jazzy-ament-cmake-uncrustify ros-jazzy-ament-cmake-pep257
        ros-jazzy-ament-cmake-flake8 ros-jazzy-ament-cmake-cpplint
  stage_9_job_18:
    name: ament-cmake-cppcheck launch-testing eigen3-cmake-module ament-cmake-clang-format
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_8_job_16
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-cmake-cppcheck ros-jazzy-launch-testing ros-jazzy-eigen3-cmake-module
          ros-jazzy-ament-cmake-clang-format
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-cmake-cppcheck ros-jazzy-launch-testing ros-jazzy-eigen3-cmake-module
        ros-jazzy-ament-cmake-clang-format
  stage_10_job_19:
    name: ament-lint-common foonathan-memory-vendor
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_9_job_17
    - stage_9_job_18
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-lint-common ros-jazzy-foonathan-memory-vendor
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-lint-common ros-jazzy-foonathan-memory-vendor
  stage_11_job_20:
    name: python-cmake-module rosidl-adapter performance-test-fixture mimick-vendor
      ament-cmake-ros
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_10_job_19
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-python-cmake-module ros-jazzy-rosidl-adapter ros-jazzy-performance-test-fixture
          ros-jazzy-mimick-vendor ros-jazzy-ament-cmake-ros
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-python-cmake-module ros-jazzy-rosidl-adapter ros-jazzy-performance-test-fixture
        ros-jazzy-mimick-vendor ros-jazzy-ament-cmake-ros
  stage_11_job_21:
    name: rosidl-typesupport-interface fastrtps-cmake-module fastrtps rti-connext-dds-cmake-module
      rmw-implementation-cmake
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_10_job_19
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosidl-typesupport-interface ros-jazzy-fastrtps-cmake-module
          ros-jazzy-fastrtps ros-jazzy-rti-connext-dds-cmake-module ros-jazzy-rmw-implementation-cmake
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosidl-typesupport-interface ros-jazzy-fastrtps-cmake-module
        ros-jazzy-fastrtps ros-jazzy-rti-connext-dds-cmake-module ros-jazzy-rmw-implementation-cmake
  stage_11_job_22:
    name: ament-index-cpp spdlog-vendor orocos-kdl-vendor keyboard-handler
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_10_job_19
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ament-index-cpp ros-jazzy-spdlog-vendor ros-jazzy-orocos-kdl-vendor
          ros-jazzy-keyboard-handler
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ament-index-cpp ros-jazzy-spdlog-vendor ros-jazzy-orocos-kdl-vendor
        ros-jazzy-keyboard-handler
  stage_12_job_23:
    name: launch-testing-ament-cmake rosidl-parser tracetools libyaml-vendor console-bridge-vendor
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_11_job_20
    - stage_11_job_21
    - stage_11_job_22
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-launch-testing-ament-cmake ros-jazzy-rosidl-parser
          ros-jazzy-tracetools ros-jazzy-libyaml-vendor ros-jazzy-console-bridge-vendor
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-launch-testing-ament-cmake ros-jazzy-rosidl-parser ros-jazzy-tracetools
        ros-jazzy-libyaml-vendor ros-jazzy-console-bridge-vendor
  stage_12_job_24:
    name: urdf-parser-plugin
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_11_job_20
    - stage_11_job_21
    - stage_11_job_22
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-urdf-parser-plugin
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-urdf-parser-plugin
  stage_13_job_25:
    name: rcutils rosidl-pycommon rosidl-generator-type-description urdfdom
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_12_job_23
    - stage_12_job_24
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rcutils ros-jazzy-rosidl-pycommon ros-jazzy-rosidl-generator-type-description
          ros-jazzy-urdfdom
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rcutils ros-jazzy-rosidl-pycommon ros-jazzy-rosidl-generator-type-description
        ros-jazzy-urdfdom
  stage_14_job_26:
    name: rosidl-runtime-c rosidl-cmake rcpputils
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_13_job_25
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosidl-runtime-c ros-jazzy-rosidl-cmake ros-jazzy-rcpputils
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosidl-runtime-c ros-jazzy-rosidl-cmake ros-jazzy-rcpputils
  stage_15_job_27:
    name: rosidl-runtime-cpp rosidl-generator-c rosidl-dynamic-typesupport rcl-logging-interface
      class-loader
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_14_job_26
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosidl-runtime-cpp ros-jazzy-rosidl-generator-c
          ros-jazzy-rosidl-dynamic-typesupport ros-jazzy-rcl-logging-interface ros-jazzy-class-loader
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosidl-runtime-cpp ros-jazzy-rosidl-generator-c ros-jazzy-rosidl-dynamic-typesupport
        ros-jazzy-rcl-logging-interface ros-jazzy-class-loader
  stage_16_job_28:
    name: rosidl-generator-cpp rmw rosidl-typesupport-introspection-c rosidl-dynamic-typesupport-fastrtps
      rcl-logging-spdlog
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_15_job_27
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosidl-generator-cpp ros-jazzy-rmw ros-jazzy-rosidl-typesupport-introspection-c
          ros-jazzy-rosidl-dynamic-typesupport-fastrtps ros-jazzy-rcl-logging-spdlog
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosidl-generator-cpp ros-jazzy-rmw ros-jazzy-rosidl-typesupport-introspection-c
        ros-jazzy-rosidl-dynamic-typesupport-fastrtps ros-jazzy-rcl-logging-spdlog
  stage_16_job_29:
    name: pluginlib
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_15_job_27
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-pluginlib
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-pluginlib
  stage_17_job_30:
    name: rosidl-typesupport-fastrtps-cpp rosidl-typesupport-introspection-cpp rcl-yaml-param-parser
      urdf
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_16_job_28
    - stage_16_job_29
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosidl-typesupport-fastrtps-cpp ros-jazzy-rosidl-typesupport-introspection-cpp
          ros-jazzy-rcl-yaml-param-parser ros-jazzy-urdf
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosidl-typesupport-fastrtps-cpp ros-jazzy-rosidl-typesupport-introspection-cpp
        ros-jazzy-rcl-yaml-param-parser ros-jazzy-urdf
  stage_18_job_31:
    name: rosidl-typesupport-fastrtps-c kdl-parser rosidl-typesupport-c
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_17_job_30
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosidl-typesupport-fastrtps-c ros-jazzy-kdl-parser
          ros-jazzy-rosidl-typesupport-c
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosidl-typesupport-fastrtps-c ros-jazzy-kdl-parser ros-jazzy-rosidl-typesupport-c
  stage_19_job_32:
    name: rosidl-typesupport-cpp rosidl-generator-py rosidl-core-runtime rosidl-core-generators
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_18_job_31
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosidl-typesupport-cpp ros-jazzy-rosidl-generator-py
          ros-jazzy-rosidl-core-runtime ros-jazzy-rosidl-core-generators
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosidl-typesupport-cpp ros-jazzy-rosidl-generator-py ros-jazzy-rosidl-core-runtime
        ros-jazzy-rosidl-core-generators
  stage_20_job_33:
    name: builtin-interfaces unique-identifier-msgs service-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_19_job_32
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-builtin-interfaces ros-jazzy-unique-identifier-msgs
          ros-jazzy-service-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-builtin-interfaces ros-jazzy-unique-identifier-msgs ros-jazzy-service-msgs
  stage_21_job_34:
    name: action-msgs type-description-interfaces rosidl-default-runtime rosidl-default-generators
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_20_job_33
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-action-msgs ros-jazzy-type-description-interfaces
          ros-jazzy-rosidl-default-runtime ros-jazzy-rosidl-default-generators
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-action-msgs ros-jazzy-type-description-interfaces ros-jazzy-rosidl-default-runtime
        ros-jazzy-rosidl-default-generators
  stage_22_job_35:
    name: rmw-dds-common test-msgs rcl-interfaces lifecycle-msgs std-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_21_job_34
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rmw-dds-common ros-jazzy-test-msgs ros-jazzy-rcl-interfaces
          ros-jazzy-lifecycle-msgs ros-jazzy-std-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rmw-dds-common ros-jazzy-test-msgs ros-jazzy-rcl-interfaces
        ros-jazzy-lifecycle-msgs ros-jazzy-std-msgs
  stage_22_job_36:
    name: statistics-msgs rosgraph-msgs std-srvs rosbag2-test-msgdefs rosbag2-interfaces
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_21_job_34
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-statistics-msgs ros-jazzy-rosgraph-msgs ros-jazzy-std-srvs
          ros-jazzy-rosbag2-test-msgdefs ros-jazzy-rosbag2-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-statistics-msgs ros-jazzy-rosgraph-msgs ros-jazzy-std-srvs
        ros-jazzy-rosbag2-test-msgdefs ros-jazzy-rosbag2-interfaces
  stage_22_job_37:
    name: ros2cli-test-interfaces
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_21_job_34
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ros2cli-test-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ros2cli-test-interfaces
  stage_23_job_38:
    name: rmw-fastrtps-shared-cpp rmw-connextdds-common rmw-cyclonedds-cpp composition-interfaces
      geometry-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_35
    - stage_22_job_36
    - stage_22_job_37
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rmw-fastrtps-shared-cpp ros-jazzy-rmw-connextdds-common
          ros-jazzy-rmw-cyclonedds-cpp ros-jazzy-composition-interfaces ros-jazzy-geometry-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rmw-fastrtps-shared-cpp ros-jazzy-rmw-connextdds-common
        ros-jazzy-rmw-cyclonedds-cpp ros-jazzy-composition-interfaces ros-jazzy-geometry-msgs
  stage_23_job_39:
    name: rosidl-runtime-py actionlib-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_22_job_35
    - stage_22_job_36
    - stage_22_job_37
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosidl-runtime-py ros-jazzy-actionlib-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosidl-runtime-py ros-jazzy-actionlib-msgs
  stage_24_job_40:
    name: rmw-fastrtps-dynamic-cpp rmw-fastrtps-cpp rmw-connextdds sensor-msgs tf2
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_23_job_38
    - stage_23_job_39
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rmw-fastrtps-dynamic-cpp ros-jazzy-rmw-fastrtps-cpp
          ros-jazzy-rmw-connextdds ros-jazzy-sensor-msgs ros-jazzy-tf2
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rmw-fastrtps-dynamic-cpp ros-jazzy-rmw-fastrtps-cpp ros-jazzy-rmw-connextdds
        ros-jazzy-sensor-msgs ros-jazzy-tf2
  stage_24_job_41:
    name: tf2-msgs shape-msgs trajectory-msgs nav-msgs diagnostic-msgs
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_23_job_38
    - stage_23_job_39
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-tf2-msgs ros-jazzy-shape-msgs ros-jazzy-trajectory-msgs
          ros-jazzy-nav-msgs ros-jazzy-diagnostic-msgs
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-tf2-msgs ros-jazzy-shape-msgs ros-jazzy-trajectory-msgs
        ros-jazzy-nav-msgs ros-jazzy-diagnostic-msgs
  stage_25_job_42:
    name: rmw-implementation visualization-msgs stereo-msgs sensor-msgs-py tf2-eigen-kdl
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_24_job_40
    - stage_24_job_41
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rmw-implementation ros-jazzy-visualization-msgs
          ros-jazzy-stereo-msgs ros-jazzy-sensor-msgs-py ros-jazzy-tf2-eigen-kdl
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rmw-implementation ros-jazzy-visualization-msgs ros-jazzy-stereo-msgs
        ros-jazzy-sensor-msgs-py ros-jazzy-tf2-eigen-kdl
  stage_26_job_43:
    name: rcl common-interfaces
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_25_job_42
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rcl ros-jazzy-common-interfaces
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rcl ros-jazzy-common-interfaces
  stage_27_job_44:
    name: rcl-lifecycle rcl-action libstatistics-collector
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_26_job_43
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rcl-lifecycle ros-jazzy-rcl-action ros-jazzy-libstatistics-collector
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rcl-lifecycle ros-jazzy-rcl-action ros-jazzy-libstatistics-collector
  stage_28_job_45:
    name: rclpy rclcpp
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_27_job_44
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rclpy ros-jazzy-rclcpp
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rclpy ros-jazzy-rclcpp
  stage_29_job_46:
    name: launch-ros rclcpp-lifecycle ros2cli rosbag2-test-common rclcpp-components
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_45
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-launch-ros ros-jazzy-rclcpp-lifecycle ros-jazzy-ros2cli
          ros-jazzy-rosbag2-test-common ros-jazzy-rclcpp-components
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-launch-ros ros-jazzy-rclcpp-lifecycle ros-jazzy-ros2cli
        ros-jazzy-rosbag2-test-common ros-jazzy-rclcpp-components
  stage_29_job_47:
    name: rclcpp-action tf2-py
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_28_job_45
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rclcpp-action ros-jazzy-tf2-py
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rclcpp-action ros-jazzy-tf2-py
  stage_30_job_48:
    name: launch-testing-ros message-filters rosbag2-storage tf2-ros-py ros2lifecycle-test-fixtures
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_46
    - stage_29_job_47
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-launch-testing-ros ros-jazzy-message-filters ros-jazzy-rosbag2-storage
          ros-jazzy-tf2-ros-py ros-jazzy-ros2lifecycle-test-fixtures
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-launch-testing-ros ros-jazzy-message-filters ros-jazzy-rosbag2-storage
        ros-jazzy-tf2-ros-py ros-jazzy-ros2lifecycle-test-fixtures
  stage_30_job_49:
    name: ros2multicast
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_29_job_46
    - stage_29_job_47
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ros2multicast
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ros2multicast
  stage_31_job_50:
    name: ros2topic tf2-ros rosbag2-storage-sqlite3 rosbag2-storage-mcap ros2test
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_48
    - stage_30_job_49
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ros2topic ros-jazzy-tf2-ros ros-jazzy-rosbag2-storage-sqlite3
          ros-jazzy-rosbag2-storage-mcap ros-jazzy-ros2test
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ros2topic ros-jazzy-tf2-ros ros-jazzy-rosbag2-storage-sqlite3
        ros-jazzy-rosbag2-storage-mcap ros-jazzy-ros2test
  stage_31_job_51:
    name: ros2pkg ros2service ros2node ros2interface ros2doctor
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_48
    - stage_30_job_49
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ros2pkg ros-jazzy-ros2service ros-jazzy-ros2node
          ros-jazzy-ros2interface ros-jazzy-ros2doctor
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ros2pkg ros-jazzy-ros2service ros-jazzy-ros2node ros-jazzy-ros2interface
        ros-jazzy-ros2doctor
  stage_31_job_52:
    name: ros2action tf2-tools
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_30_job_48
    - stage_30_job_49
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ros2action ros-jazzy-tf2-tools
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ros2action ros-jazzy-tf2-tools
  stage_32_job_53:
    name: robot-state-publisher rosbag2-storage-default-plugins tf2-kdl tf2-geometry-msgs
      tf2-eigen
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_50
    - stage_31_job_51
    - stage_31_job_52
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-robot-state-publisher ros-jazzy-rosbag2-storage-default-plugins
          ros-jazzy-tf2-kdl ros-jazzy-tf2-geometry-msgs ros-jazzy-tf2-eigen
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-robot-state-publisher ros-jazzy-rosbag2-storage-default-plugins
        ros-jazzy-tf2-kdl ros-jazzy-tf2-geometry-msgs ros-jazzy-tf2-eigen
  stage_32_job_54:
    name: ros-testing ros2run ros2param ros2lifecycle ros2launch
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_50
    - stage_31_job_51
    - stage_31_job_52
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ros-testing ros-jazzy-ros2run ros-jazzy-ros2param
          ros-jazzy-ros2lifecycle ros-jazzy-ros2launch
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ros-testing ros-jazzy-ros2run ros-jazzy-ros2param ros-jazzy-ros2lifecycle
        ros-jazzy-ros2launch
  stage_32_job_55:
    name: tf2-sensor-msgs tf2-bullet
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_31_job_50
    - stage_31_job_51
    - stage_31_job_52
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-tf2-sensor-msgs ros-jazzy-tf2-bullet
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-tf2-sensor-msgs ros-jazzy-tf2-bullet
  stage_33_job_56:
    name: rosbag2-cpp sros2 ros2component geometry2
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_32_job_53
    - stage_32_job_54
    - stage_32_job_55
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosbag2-cpp ros-jazzy-sros2 ros-jazzy-ros2component
          ros-jazzy-geometry2
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosbag2-cpp ros-jazzy-sros2 ros-jazzy-ros2component ros-jazzy-geometry2
  stage_34_job_57:
    name: rosbag2-compression sros2-cmake ros2cli-common-extensions
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_33_job_56
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosbag2-compression ros-jazzy-sros2-cmake ros-jazzy-ros2cli-common-extensions
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosbag2-compression ros-jazzy-sros2-cmake ros-jazzy-ros2cli-common-extensions
  stage_35_job_58:
    name: rosbag2-compression-zstd ros-core rosbag2-transport rosbag2-py
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_34_job_57
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-rosbag2-compression-zstd ros-jazzy-ros-core ros-jazzy-rosbag2-transport
          ros-jazzy-rosbag2-py
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-rosbag2-compression-zstd ros-jazzy-ros-core ros-jazzy-rosbag2-transport
        ros-jazzy-rosbag2-py
  stage_36_job_59:
    name: ros2bag rosbag2-tests rosbag2 ros-base
    runs-on: windows-2019
    strategy:
      fail-fast: false
    needs:
    - stage_35_job_58
    env:
      CONDA_BLD_PATH: C:\\bld\\
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v3
      with:
        channels: conda-forge
        miniforge-variant: Mambaforge
        miniforge-version: latest
        use-mamba: 'true'
        channel-priority: 'true'
        python-version: '3.11'
        activate-environment: test
    - run: mamba install -c conda-forge -n base --yes --quiet conda-build=3.27 pip
        mamba ruamel.yaml anaconda-client boa
      name: Install conda-build, boa and activate environment
    - uses: egor-tensin/cleanup-path@v4
      with:
        dirs: C:\Program Files\Git\usr\bin;C:\Program Files\Git\bin;C:\Program Files\Git\cmd;C:\Program
          Files\Git\mingw64\bin
    - shell: cmd
      run: |
        set "CI=azure"
        call activate base

        :: 4 cores available on GHA: https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners
        :: CPU_COUNT is passed through conda build: https://github.com/conda/conda-build/pull/1149
        set CPU_COUNT=4

        set PYTHONUNBUFFERED=1

        conda config --set show_channel_urls true
        conda config --set auto_update_conda false
        conda config --set add_pip_as_python_dependency false

        call setup_x64

        :: Set the conda-build working directory to a smaller path
        if "%CONDA_BLD_PATH%" == "" (
            set "CONDA_BLD_PATH=C:\\bld\\"
        )

        :: On azure, there are libcrypto*.dll & libssl*.dll under
        :: C:\\Windows\\System32, which should not be there (no vendor dlls in windows folder).
        :: They would be found before the openssl libs of the conda environment, so we delete them.
        if defined CI (
            DEL C:\\Windows\\System32\\libcrypto-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libcrypto-1_1-x64.dll)
            DEL C:\\Windows\\System32\\libssl-1_1-x64.dll || (Echo Ignoring failure to delete C:\\Windows\\System32\\libssl-1_1-x64.dll)
        )

        :: Make paths like C:\\hostedtoolcache\\windows\\Ruby\\2.5.7\\x64\\bin garbage
        set "PATH=%PATH:ostedtoolcache=%"

        mkdir "%CONDA%\\etc\\conda\\activate.d"

        echo set "CONDA_BLD_PATH=%CONDA_BLD_PATH%"         > "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "CPU_COUNT=%CPU_COUNT%"                  >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PYTHONUNBUFFERED=%PYTHONUNBUFFERED%"    >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"
        echo set "PATH=%PATH%"                            >> "%CONDA%\\etc\\conda\\activate.d\\conda-forge-ci-setup-activate.bat"

        conda info
        conda config --show-sources
        conda list --show-channel-urls
      name: conda-forge build setup
    - shell: cmd
      run: |
        setlocal EnableExtensions EnableDelayedExpansion

        set CONDA_BLD_PATH=C:\bld
        echo "PATH is %PATH%"

        rmdir /Q/S C:\Strawberry\
        rmdir /Q/S "C:\Program Files (x86)\Windows Kits\10\Include\10.0.17763.0\"

        set "FEEDSTOCK_ROOT=%cd%"

        mkdir %CONDA_BLD_PATH%

        :: Enable long path names on Windows
        reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f

        for %%X in (%CURRENT_RECIPES%) do (
            echo "BUILDING RECIPE %%X"
            cd %FEEDSTOCK_ROOT%\recipes\%%X\
            pixi run rattler-build build --recipe %FEEDSTOCK_ROOT%\recipes\%%X\ ^
                -m %FEEDSTOCK_ROOT%\conda_build_config.yaml ^
                -c robostack-jazzy -c conda-forge ^
                --output-dir %CONDA_BLD_PATH%

            if errorlevel 1 exit 1
            rem -m %FEEDSTOCK_ROOT%\.ci_support\conda_forge_pinnings.yaml
        )

        pixi run upload "%CONDA_BLD_PATH%\win-64\*.conda" --force
        if errorlevel 1 exit 1
      env:
        ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        CURRENT_RECIPES: ros-jazzy-ros2bag ros-jazzy-rosbag2-tests ros-jazzy-rosbag2
          ros-jazzy-ros-base
        PYTHONUNBUFFERED: 1
      name: Build ros-jazzy-ros2bag ros-jazzy-rosbag2-tests ros-jazzy-rosbag2 ros-jazzy-ros-base
name: build_win
on:
  push:
    branches:
    - buildbranch_win
